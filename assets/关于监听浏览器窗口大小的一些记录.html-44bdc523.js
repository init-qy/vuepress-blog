import{_ as t,r as i,o as r,c as l,a as e,b as n,d as a,e as o}from"./app-46d51712.js";const c={},d=o(`<h2 id="proceso" tabindex="-1"><a class="header-anchor" href="#proceso" aria-hidden="true">#</a> Proceso</h2><p>Para utilizar gráficos de echarts en un proyecto de Vue, los gráficos basados en canvas de echarts no pueden cambiar de tamaño automáticamente con el cambio del tamaño de la ventana. En este caso, es necesario escuchar el cambio de tamaño de la ventana y ejecutar el método de redimensionamiento de echarts en tiempo real.</p><h3 id="agregar-un-controlador-de-eventos-al-objeto-window" tabindex="-1"><a class="header-anchor" href="#agregar-un-controlador-de-eventos-al-objeto-window" aria-hidden="true">#</a> Agregar un controlador de eventos al objeto Window</h3><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>mounted() { window.addEventListener(&#39;resize&#39;, this.resizeHandler) }, destroyed()
{ window.removeEventListener(&#39;resize&#39;, this.resizeHandler) }, methods:{
resizeHandler(){ // do something } }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="montar-el-metodo-en-el-evento-onresize-de-la-ventana" tabindex="-1"><a class="header-anchor" href="#montar-el-metodo-en-el-evento-onresize-de-la-ventana" aria-hidden="true">#</a> Montar el método en el evento onresize de la ventana</h3><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>watch: { screenWidth(val) { //
为了避免频繁触发resize函数导致页面卡顿，使用定时器 if (!this.timer) { //
一旦监听到的screenWidth值改变，就将其重新赋给data里的screenWidth
this.screenWidth = val this.timer = true const that = this setTimeout(function()
{ // 打印screenWidth变化的值 console.log(that.screenWidth) that.timer = false //
do something }, 400) } } }, mounted () { // 监听页面大小变化 const that = this
window.onresize = () =&gt; { return (() =&gt; { window.screenWidth =
document.body.clientWidth that.screenWidth = window.screenWidth })() } }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Este método es un poco engorroso y también se necesitan mantener dos variables adicionales en los datos.</p><h3 id="utilizar-resize-observer-polyfill-para-escuchar-los-cambios-de-tamano-del-dom" tabindex="-1"><a class="header-anchor" href="#utilizar-resize-observer-polyfill-para-escuchar-los-cambios-de-tamano-del-dom" aria-hidden="true">#</a> Utilizar resize-observer-polyfill para escuchar los cambios de tamaño del DOM</h3>`,8),u={href:"https://www.jianshu.com/p/2089f3a5b9a4",title:"Método de evento de redimensionamiento encapsulado en element-ui",target:"_blank",rel:"noopener noreferrer"},p=o(`<p>El código utilizado es el siguiente:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 先引入</span>
<span class="token comment">// 如果项目使用了element-ui，可以直接引用，或者copy一份放在自己的代码里</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
  addResizeListener<span class="token punctuation">,</span>
  removeResizeListener<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;element-ui/src/utils/resize-event&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 可以在mounted这个钩子里初始化事件</span>
    <span class="token function">addResizeListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>resizeListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">resizeListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// do something</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 生命周期结束时销毁事件</span>
  <span class="token function">destroyed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resizeListener<span class="token punctuation">)</span>
      <span class="token function">removeResizeListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>resizeListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="utilizar-useresizeobserver-de-vueuse-15-de-diciembre-de-2022" tabindex="-1"><a class="header-anchor" href="#utilizar-useresizeobserver-de-vueuse-15-de-diciembre-de-2022" aria-hidden="true">#</a> Utilizar useresizeobserver de vueuse (15 de diciembre de 2022)</h3>`,3),m=e("br",null,null,-1),v={href:"https://vueuse.org/core/useresizeobserver/#useresizeobserver",target:"_blank",rel:"noopener noreferrer"},h=e("h2",{id:"resumen",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#resumen","aria-hidden":"true"},"#"),n(" Resumen")],-1),b=e("p",null,"Durante todo el proceso, he aprendido muchas cosas siguiendo el código fuente, pero no he estudiado de manera sistemática, solo tengo una comprensión general. Aquí hago un resumen:",-1),k={href:"https://ponyfoo.com/articles/polyfills-or-ponyfills#ponyfills",title:"¿Polyfills o Ponyfills?",target:"_blank",rel:"noopener noreferrer"},_={href:"https://echarts.apache.org/zh/index.html",title:"Sitio web oficial de echarts",target:"_blank",rel:"noopener noreferrer"},f=e("em",null,"（El 28 de enero de 2021, echarts lanzará una nueva versión. He echado un vistazo y además del canvas, también se utiliza SVG para renderizar gráficos）",-1),g={href:"https://github.com/que-etc/resize-observer-polyfill",title:"resize-observer-polyfill",target:"_blank",rel:"noopener noreferrer"},z={href:"https://github.com/linyuxuanlin/Wiki_MkDocs/issues/new",target:"_blank",rel:"noopener noreferrer"},y=e("strong",null,"feedback",-1);function w(x,E){const s=i("ExternalLinkIcon");return r(),l("div",null,[d,e("p",null,[n("Este método, en comparación con los dos anteriores, solo puede escuchar los cambios de tamaño de la ventana, pero puede escuchar los cambios de tamaño de los elementos. Puede responder a algunos elementos variables en la página. El método utilizado proviene del código fuente de element-ui. Agradezco al autor por descubrirlo: "),e("a",u,[n("Método de evento de redimensionamiento encapsulado en element-ui"),a(s)])]),p,e("p",null,[n("Con el paso del tiempo, utilizar vueuse se ha vuelto muy conveniente. Cuando se necesitan llamar a algunos métodos nativos del navegador, vueuse suele ser una buena elección."),m,e("a",v,[n("https://vueuse.org/core/useresizeobserver/#useresizeobserver"),a(s)])]),h,b,e("ol",null,[e("li",null,[e("a",k,[n("¿Polyfills o Ponyfills?"),a(s)])]),e("li",null,[e("a",_,[n("Sitio web oficial de echarts"),a(s)]),n(),f]),e("li",null,[e("a",g,[n("resize-observer-polyfill"),a(s)])])]),e("blockquote",null,[e("p",null,[n("Este post está traducido usando ChatGPT, por favor "),e("a",z,[y,a(s)]),n(" si hay alguna omisión.")])])])}const W=t(c,[["render",w],["__file","关于监听浏览器窗口大小的一些记录.html.vue"]]);export{W as default};

import{_ as i,r as o,o as r,c as l,a as e,b as n,d as a,e as t}from"./app-10d891be.js";const c={},d=t(`<h2 id="process" tabindex="-1"><a class="header-anchor" href="#process" aria-hidden="true">#</a> Process</h2><p>In order to use echarts charts in a vue project, the canvas-based echarts cannot change with the window size. In this case, it is necessary to listen for window size changes and dynamically execute the echarts resize method.</p><h3 id="add-event-handlers-to-the-window-object" tabindex="-1"><a class="header-anchor" href="#add-event-handlers-to-the-window-object" aria-hidden="true">#</a> Add event handlers to the Window object</h3><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>mounted() { window.addEventListener(&#39;resize&#39;, this.resizeHandler) }, destroyed()
{ window.removeEventListener(&#39;resize&#39;, this.resizeHandler) }, methods:{
resizeHandler(){ // do something } }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mount-the-method-in-the-window-s-onresize-event" tabindex="-1"><a class="header-anchor" href="#mount-the-method-in-the-window-s-onresize-event" aria-hidden="true">#</a> Mount the method in the window&#39;s onresize event</h3><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>watch: { screenWidth(val) { //
为了避免频繁触发resize函数导致页面卡顿，使用定时器 if (!this.timer) { //
一旦监听到的screenWidth值改变，就将其重新赋给data里的screenWidth
this.screenWidth = val this.timer = true const that = this setTimeout(function()
{ // 打印screenWidth变化的值 console.log(that.screenWidth) that.timer = false //
do something }, 400) } } }, mounted () { // 监听页面大小变化 const that = this
window.onresize = () =&gt; { return (() =&gt; { window.screenWidth =
document.body.clientWidth that.screenWidth = window.screenWidth })() } }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This method is a bit cumbersome, and it also requires maintaining two additional variables in the data.</p><h3 id="use-resize-observer-polyfill-to-listen-for-changes-in-dom-size" tabindex="-1"><a class="header-anchor" href="#use-resize-observer-polyfill-to-listen-for-changes-in-dom-size" aria-hidden="true">#</a> Use resize-observer-polyfill to listen for changes in DOM size</h3>`,8),u={href:"https://www.jianshu.com/p/2089f3a5b9a4",title:"Using the resize event method encapsulated by element-ui",target:"_blank",rel:"noopener noreferrer"},p=t(`<p>The code used is from this person:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 先引入</span>
<span class="token comment">// 如果项目使用了element-ui，可以直接引用，或者copy一份放在自己的代码里</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
  addResizeListener<span class="token punctuation">,</span>
  removeResizeListener<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;element-ui/src/utils/resize-event&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 可以在mounted这个钩子里初始化事件</span>
    <span class="token function">addResizeListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>resizeListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">resizeListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// do something</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 生命周期结束时销毁事件</span>
  <span class="token function">destroyed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resizeListener<span class="token punctuation">)</span>
      <span class="token function">removeResizeListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>resizeListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="use-useresizeobserver-from-vueuse-2022-12-15" tabindex="-1"><a class="header-anchor" href="#use-useresizeobserver-from-vueuse-2022-12-15" aria-hidden="true">#</a> Use useresizeobserver from vueuse (2022-12-15)</h3>`,3),h=e("br",null,null,-1),v={href:"https://vueuse.org/core/useresizeobserver/#useresizeobserver",target:"_blank",rel:"noopener noreferrer"},m=e("h2",{id:"summary",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#summary","aria-hidden":"true"},"#"),n(" Summary")],-1),b=e("p",null,"Throughout the process, I have learned a lot by following the source code, but I haven't studied it systematically, just got a general understanding. Here is a summary:",-1),k={href:"https://ponyfoo.com/articles/polyfills-or-ponyfills#ponyfills",title:"Polyfills or Ponyfills?",target:"_blank",rel:"noopener noreferrer"},f={href:"https://echarts.apache.org/zh/index.html",title:"echarts official website",target:"_blank",rel:"noopener noreferrer"},_=e("em",null,"(On January 28, 2021, echarts will release a new version. I took a look and found that besides canvas, it also uses SVG for rendering.)",-1),g={href:"https://github.com/que-etc/resize-observer-polyfill",title:"resize-observer-polyfill",target:"_blank",rel:"noopener noreferrer"},w={href:"https://github.com/linyuxuanlin/Wiki_MkDocs/issues/new",target:"_blank",rel:"noopener noreferrer"},y=e("strong",null,"feedback",-1);function z(x,W){const s=o("ExternalLinkIcon");return r(),l("div",null,[d,e("p",null,[n("This method, compared to the previous two, can only listen for changes in window size, but it can listen for changes in element size. It can respond to some variable elements on the page. The method is derived from the source code of element-ui. Thanks to this person for the discovery: "),e("a",u,[n("Using the resize event method encapsulated by element-ui"),a(s)])]),p,e("p",null,[n("Times have changed, and using vueuse has become very convenient. When you need to call some native browser methods, vueuse is often a good choice."),h,e("a",v,[n("https://vueuse.org/core/useresizeobserver/#useresizeobserver"),a(s)])]),m,b,e("ol",null,[e("li",null,[e("a",k,[n("Polyfills or Ponyfills?"),a(s)])]),e("li",null,[e("a",f,[n("echarts official website"),a(s)]),n(),_]),e("li",null,[e("a",g,[n("resize-observer-polyfill"),a(s)])])]),e("blockquote",null,[e("p",null,[n("This post is translated using ChatGPT, please "),e("a",w,[y,a(s)]),n(" if any omissions.")])])])}const T=i(c,[["render",z],["__file","关于监听浏览器窗口大小的一些记录.html.vue"]]);export{T as default};

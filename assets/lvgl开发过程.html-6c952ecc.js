const t=JSON.parse('{"key":"v-531750cb","path":"/posts/lvgl%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B.html","title":"lvgl 开发过程","lang":"zh-CN","frontmatter":{"title":"lvgl 开发过程","date":"2024-05-23T11:16:32.000Z","tag":["lvgl"],"category":["前端开发"],"description":"背景 新接了项目，做c++页面的开发，由于之前没有接触过相关的开发，在此记录下过程，同时也纪念下二十天左右的开发时长。大约50%左右的时间用在熟悉lvgl开发，它的渲染过程，语法，API等方面，30%左右的时间用来编译，测试，只有剩下的时间是真正用来编写代码的。在这个过程中，新加的逻辑，对应的代码分支在不断增长，也会让后来的我需要更长的时间理解代码，最后磕磕绊绊，算是完成了任务，但我对代码的整体健壮性，整洁度，可读性都不太满意。 风格 由于时间紧迫，我并没有安装一个合适的代码风格管理插件，原项目也存在风格不统一的情况，tab和空格混用，方法对齐之类，因此我只能在我新加的页面中保持风格统一。保持项目风格的统一其实是一件投入产出比很高的事情，因为这不仅方便代码阅读，也方便后来者接手学习，一个健康的项目尤其需要注意这点。","head":[["link",{"rel":"canonical","href":"https://init-qy.github.io/vuepress-blog/posts/lvgl%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B.html"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://init-qy.github.io/vuepress-blog/en/posts/lvgl%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B.html"}],["link",{"rel":"alternate","hreflang":"es","href":"https://init-qy.github.io/vuepress-blog/es/posts/lvgl%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B.html"}],["meta",{"property":"og:url","content":"https://init-qy.github.io/vuepress-blog/posts/lvgl%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"init-qy的博客"}],["meta",{"property":"og:title","content":"lvgl 开发过程"}],["meta",{"property":"og:description","content":"背景 新接了项目，做c++页面的开发，由于之前没有接触过相关的开发，在此记录下过程，同时也纪念下二十天左右的开发时长。大约50%左右的时间用在熟悉lvgl开发，它的渲染过程，语法，API等方面，30%左右的时间用来编译，测试，只有剩下的时间是真正用来编写代码的。在这个过程中，新加的逻辑，对应的代码分支在不断增长，也会让后来的我需要更长的时间理解代码，最后磕磕绊绊，算是完成了任务，但我对代码的整体健壮性，整洁度，可读性都不太满意。 风格 由于时间紧迫，我并没有安装一个合适的代码风格管理插件，原项目也存在风格不统一的情况，tab和空格混用，方法对齐之类，因此我只能在我新加的页面中保持风格统一。保持项目风格的统一其实是一件投入产出比很高的事情，因为这不仅方便代码阅读，也方便后来者接手学习，一个健康的项目尤其需要注意这点。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"es"}],["meta",{"property":"og:updated_time","content":"2024-05-23T08:30:49.000Z"}],["meta",{"property":"article:author","content":"init-qy"}],["meta",{"property":"article:tag","content":"lvgl"}],["meta",{"property":"article:published_time","content":"2024-05-23T11:16:32.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-23T08:30:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"lvgl 开发过程\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-23T11:16:32.000Z\\",\\"dateModified\\":\\"2024-05-23T08:30:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"init-qy\\",\\"url\\":\\"https://github.com/init-qy\\"}]}"]]},"headers":[{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":2,"title":"风格","slug":"风格","link":"#风格","children":[]},{"level":2,"title":"公共代码","slug":"公共代码","link":"#公共代码","children":[]},{"level":2,"title":"对接数据","slug":"对接数据","link":"#对接数据","children":[]},{"level":2,"title":"快","slug":"快","link":"#快","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1716453049000,"updatedTime":1716453049000},"readingTime":{"minutes":4.1,"words":1230},"filePathRelative":"posts/lvgl开发过程.md","localizedDate":"2024年5月23日","excerpt":"<h2> 背景</h2>\\n<p>新接了项目，做<code>c++</code>页面的开发，由于之前没有接触过相关的开发，在此记录下过程，同时也纪念下二十天左右的开发时长。大约50%左右的时间用在熟悉<code>lvgl</code>开发，它的渲染过程，语法，API等方面，30%左右的时间用来编译，测试，只有剩下的时间是真正用来编写代码的。在这个过程中，新加的逻辑，对应的代码分支在不断增长，也会让后来的我需要更长的时间理解代码，最后磕磕绊绊，算是完成了任务，但我对代码的整体健壮性，整洁度，可读性都不太满意。</p>\\n<h2> 风格</h2>\\n<p>由于时间紧迫，我并没有安装一个合适的代码风格管理插件，原项目也存在风格不统一的情况，tab和空格混用，方法对齐之类，因此我只能在我新加的页面中保持风格统一。保持项目风格的统一其实是一件投入产出比很高的事情，因为这不仅方便代码阅读，也方便后来者接手学习，一个健康的项目尤其需要注意这点。</p>","autoDesc":true}');export{t as data};

import{_ as e,r as p,o,c as l,a as n,b as a,d as t,e as c}from"./app-23f68ebc.js";const u={},i=n("h2",{id:"comenzar",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#comenzar","aria-hidden":"true"},"#"),a(" Comenzar")],-1),r=n("p",null,"Cuando se trabaja en proyectos grandes con Vue, a menudo se utiliza Vue i18n como solución de internacionalización.",-1),d={href:"https://kazupon.github.io/vue-i18n/zh/started.html#javascript",title:"vue-i18n",target:"_blank",rel:"noopener noreferrer"},k=c(`<h2 id="problemas" tabindex="-1"><a class="header-anchor" href="#problemas" aria-hidden="true">#</a> Problemas</h2><ul><li>t() y tc()<br> Estos dos métodos son muy similares en la mayoría de los casos, lo que lleva a que a menudo se confundan. De hecho, en la mayoría de los casos se debe utilizar t(). El método tc() se utiliza para casos de pluralidad, lo cual impide que se muestre el carácter &#39;|&#39;. En el código fuente, tc() tiene la siguiente sección:</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> choices <span class="token operator">=</span> message<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;|&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// line:1807</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Por lo tanto, si tu mensaje contiene &#39;|&#39;, por favor no utilices tc().</p><ul><li>Reutilización<br> En algunos formularios, implementar la internacionalización puede resultar complicado. Muchos campos de internacionalización solo se utilizan en un lugar, como en un formulario simple:</li></ul><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form</span>
  <span class="token attr-name">:model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>numberValidateForm<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>numberValidateForm<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">label-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100px<span class="token punctuation">&quot;</span></span>
  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>demo-ruleForm<span class="token punctuation">&quot;</span></span>
<span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-form-item</span>
    <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>年龄<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>age<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:rules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[
      { required: true, message: &#39;请输入年龄&#39;}
    ]<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>age<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-model.number</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>numberValidateForm.age<span class="token punctuation">&quot;</span></span> <span class="token attr-name">autocomplete</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>off<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>请输入年龄<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-input</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form-item</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>En este formulario, &#39;Edad&#39; necesita internacionalización, al igual que &#39;Por favor ingrese su edad&#39;. Esto significa que la internacionalización ocupa dos líneas:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;age&quot;</span><span class="token operator">:</span> <span class="token string">&quot;年龄&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;agePlaceholder&quot;</span><span class="token operator">:</span> <span class="token string">&quot;请输入年龄&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>La internacionalización de cada campo implica el doble de trabajo. Si además se divide la internacionalización en módulos, el código se vuelve redundante: <code>$(&#39;modelA.modelB.age&#39;)</code> y <code>$(&#39;modelA.modelB.agePlaceholder&#39;)</code>. Para este tipo de situaciones, se puede escribir un método que los reemplace, como se muestra a continuación:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token function">placeholder</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> inputType <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> lengthOption <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">min</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">max</span><span class="token operator">:</span> <span class="token number">128</span> <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 1 input 2 pick 3 length</span>
      <span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$t</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">modelA.modelB.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>inputType <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> name<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>inputType <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$t</span><span class="token punctuation">(</span><span class="token string">&#39;modelA.modelB.nullPrompt&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> name<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>inputType <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$t</span><span class="token punctuation">(</span><span class="token string">&#39;modelA.modelB.nullPick&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> name<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>inputType <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> name <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$t</span><span class="token punctuation">(</span><span class="token string">&#39;modelA.modelB.nameLength&#39;</span><span class="token punctuation">,</span> lengthOption<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),m={href:"https://github.com/linyuxuanlin/Wiki_MkDocs/issues/new",target:"_blank",rel:"noopener noreferrer"},v=n("strong",null,"feedback",-1);function b(g,q){const s=p("ExternalLinkIcon");return o(),l("div",null,[i,r,n("p",null,[a("La mayoría de los casos de uso se pueden encontrar en la "),n("a",d,[a("documentación oficial"),t(s)]),a(", aquí solo se registrarán algunos problemas que se pueden encontrar en el uso práctico.")]),k,n("blockquote",null,[n("p",null,[a("Este post está traducido usando ChatGPT, por favor "),n("a",m,[v,t(s)]),a(" si hay alguna omisión.")])])])}const f=e(u,[["render",b],["__file","vue-i18n的一些使用.html.vue"]]);export{f as default};

const t=JSON.parse('{"key":"v-3e813f1d","path":"/posts/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html","title":"小程序开发过程中的一些问题及解决方案","lang":"zh-CN","frontmatter":{"title":"小程序开发过程中的一些问题及解决方案","date":"2020-12-13T21:31:05.000Z","tag":["小程序","mpvue"],"category":["前端开发"],"description":"前言 最近完成了一个内容分发类的小程序，具体核心功能是提供稿件的编辑，上传，评论等等（公众号 plus）；应用到的框架为 mpvue 和 vant-weapp，框架的选型是我最熟悉的框架，主要原因为项目比较赶，虽然之前研究过 uniapp，毕竟没有用它写过，踩坑也需要时间，所以最终敲定了这个技术框架作为这个小程序的基础。由于这次做的小程序类型之前并没有接触过，但也因此碰到了一些微信不常用组件的问题。 踩坑记录 editor 组件 稿件的编辑是核心功能之一，由于稿件需要同时展示图片及文本，和后端协商后选定了一个最简单的方案，即存储为富文本；小程序端能用 rich-text 组件展示，后台管理端也没有问题，数据库使用 text 存储。后台管理端使用 tinymce 进行富文本编辑，而小程序，我只找到了 editor 组件。","head":[["meta",{"property":"og:url","content":"https://init-qy.github.io/vuepress-blog/posts/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html"}],["meta",{"property":"og:site_name","content":"init-qy的博客"}],["meta",{"property":"og:title","content":"小程序开发过程中的一些问题及解决方案"}],["meta",{"property":"og:description","content":"前言 最近完成了一个内容分发类的小程序，具体核心功能是提供稿件的编辑，上传，评论等等（公众号 plus）；应用到的框架为 mpvue 和 vant-weapp，框架的选型是我最熟悉的框架，主要原因为项目比较赶，虽然之前研究过 uniapp，毕竟没有用它写过，踩坑也需要时间，所以最终敲定了这个技术框架作为这个小程序的基础。由于这次做的小程序类型之前并没有接触过，但也因此碰到了一些微信不常用组件的问题。 踩坑记录 editor 组件 稿件的编辑是核心功能之一，由于稿件需要同时展示图片及文本，和后端协商后选定了一个最简单的方案，即存储为富文本；小程序端能用 rich-text 组件展示，后台管理端也没有问题，数据库使用 text 存储。后台管理端使用 tinymce 进行富文本编辑，而小程序，我只找到了 editor 组件。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-15T04:36:42.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:tag","content":"小程序"}],["meta",{"property":"article:tag","content":"mpvue"}],["meta",{"property":"article:published_time","content":"2020-12-13T21:31:05.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-15T04:36:42.000Z"}],["link",{"rel":"canonical","href":"https://init-qy.github.io/vuepress-blog/posts/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://init-qy.github.io/vuepress-blog/en/posts/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html"}]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"踩坑记录","slug":"踩坑记录","link":"#踩坑记录","children":[{"level":3,"title":"editor 组件","slug":"editor-组件","link":"#editor-组件","children":[]},{"level":3,"title":"ios 与安卓实际展现不一样","slug":"ios-与安卓实际展现不一样","link":"#ios-与安卓实际展现不一样","children":[]}]},{"level":2,"title":"思考反思","slug":"思考反思","link":"#思考反思","children":[]}],"git":{"createdTime":1671079002000,"updatedTime":1671079002000,"contributors":[{"name":"init-qy","email":"953218204@qq.com","commits":1}]},"readingTime":{"minutes":5.39,"words":1617},"filePathRelative":"posts/小程序开发过程中的一些问题及解决方案.md","localizedDate":"2020年12月13日","excerpt":"<h2> 前言</h2>\\n<p>最近完成了一个内容分发类的小程序，具体核心功能是提供稿件的编辑，上传，评论等等（<s>公众号 plus</s>）；应用到的框架为 mpvue 和 vant-weapp，框架的选型是我最熟悉的框架，主要原因为项目比较赶，虽然之前研究过 uniapp，毕竟没有用它写过，踩坑也需要时间，所以最终敲定了这个技术框架作为这个小程序的基础。由于这次做的小程序类型之前并没有接触过，但也因此碰到了一些微信不常用组件的问题。</p>\\n<h2> 踩坑记录</h2>\\n<h3> editor 组件</h3>\\n<p>稿件的编辑是核心功能之一，由于稿件需要同时展示图片及文本，和后端协商后选定了一个最简单的方案，即存储为富文本；小程序端能用 rich-text 组件展示，后台管理端也没有问题，数据库使用 text 存储。后台管理端使用 tinymce 进行富文本编辑，而小程序，我只找到了 editor 组件。</p>","autoDesc":true}');export{t as data};

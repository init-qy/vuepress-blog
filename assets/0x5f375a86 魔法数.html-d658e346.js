const t=JSON.parse('{"key":"v-42c13ed4","path":"/en/posts/0x5f375a86%20%E9%AD%94%E6%B3%95%E6%95%B0.html","title":"0x5f375a86 魔法数","lang":"en-US","frontmatter":{"title":"0x5f375a86 魔法数","date":"2020-11-04T10:40:52.000Z","tag":["杂谈","算法"],"category":["算法"],"description":"在机缘巧合下，了解到了这么一个神奇的 16 进制数字0x5f3759df，顺便记录一下 科学改变世界，数学改变科学 上回遇到的不讲道理的数字是0.75，它出现在 Java HashMap 的源码中，含义是默认的负载因子。简单介绍一下这个值的含义：在 HashMap 中达到容量的 0.75 倍时（即容量为 16 时元素为 12 时）会对 HashMap 进行扩容，扩容的意义在于减少 hash 冲突，避免 HashMap 退化为链表而大大增加查询时间。至于这个值为什么是 0.75，有个很简单的解释：提高空间利用率和减少查询成本的折中，主要是泊松分布，0.75 的话碰撞最小","head":[["meta",{"property":"og:url","content":"https://init-qy.github.io/vuepress-blog/en/posts/0x5f375a86%20%E9%AD%94%E6%B3%95%E6%95%B0.html"}],["meta",{"property":"og:site_name","content":"blog by init-qy"}],["meta",{"property":"og:title","content":"0x5f375a86 魔法数"}],["meta",{"property":"og:description","content":"在机缘巧合下，了解到了这么一个神奇的 16 进制数字0x5f3759df，顺便记录一下 科学改变世界，数学改变科学 上回遇到的不讲道理的数字是0.75，它出现在 Java HashMap 的源码中，含义是默认的负载因子。简单介绍一下这个值的含义：在 HashMap 中达到容量的 0.75 倍时（即容量为 16 时元素为 12 时）会对 HashMap 进行扩容，扩容的意义在于减少 hash 冲突，避免 HashMap 退化为链表而大大增加查询时间。至于这个值为什么是 0.75，有个很简单的解释：提高空间利用率和减少查询成本的折中，主要是泊松分布，0.75 的话碰撞最小"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-12-12T08:44:30.000Z"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"article:tag","content":"杂谈"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:published_time","content":"2020-11-04T10:40:52.000Z"}],["meta",{"property":"article:modified_time","content":"2022-12-12T08:44:30.000Z"}],["link",{"rel":"canonical","href":"https://init-qy.github.io/vuepress-blog/en/posts/0x5f375a86%20%E9%AD%94%E6%B3%95%E6%95%B0.html"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://init-qy.github.io/vuepress-blog/posts/0x5f375a86%20%E9%AD%94%E6%B3%95%E6%95%B0.html"}]]},"headers":[],"git":{"createdTime":1670834670000,"updatedTime":1670834670000,"contributors":[{"name":"init-qy","email":"953218204@qq.com","commits":1}]},"readingTime":{"minutes":4.57,"words":1372},"filePathRelative":"en/posts/0x5f375a86 魔法数.md","localizedDate":"November 4, 2020","excerpt":"<p>在机缘巧合下，了解到了这么一个神奇的 16 进制数字<code>0x5f3759df</code>，顺便记录一下</p>\\n<blockquote>\\n<p>科学改变世界，数学改变科学</p>\\n</blockquote>\\n<p>上回遇到的不讲道理的数字是<code>0.75</code>，它出现在 Java HashMap 的源码中，含义是默认的负载因子。简单介绍一下这个值的含义：在 HashMap 中达到容量的 0.75 倍时（即容量为 16 时元素为 12 时）会对 HashMap 进行扩容，扩容的意义在于减少 hash 冲突，避免 HashMap 退化为链表而大大增加查询时间。至于这个值为什么是 0.75，有个很简单的解释：<strong>提高空间利用率和减少查询成本的折中，主要是泊松分布，0.75 的话碰撞最小</strong></p>","autoDesc":true}');export{t as data};

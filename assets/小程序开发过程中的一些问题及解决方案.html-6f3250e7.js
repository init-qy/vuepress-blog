import{_ as o,r as i,o as p,c,a as n,b as s,d as t,e}from"./app-9efc7c01.js";const l={},r=e('<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>最近完成了一个内容分发类的小程序，具体核心功能是提供稿件的编辑，上传，评论等等（<s>公众号 plus</s>）；应用到的框架为 mpvue 和 vant-weapp，框架的选型是我最熟悉的框架，主要原因为项目比较赶，虽然之前研究过 uniapp，毕竟没有用它写过，踩坑也需要时间，所以最终敲定了这个技术框架作为这个小程序的基础。由于这次做的小程序类型之前并没有接触过，但也因此碰到了一些微信不常用组件的问题。</p><h2 id="踩坑记录" tabindex="-1"><a class="header-anchor" href="#踩坑记录" aria-hidden="true">#</a> 踩坑记录</h2><h3 id="editor-组件" tabindex="-1"><a class="header-anchor" href="#editor-组件" aria-hidden="true">#</a> editor 组件</h3><p>稿件的编辑是核心功能之一，由于稿件需要同时展示图片及文本，和后端协商后选定了一个最简单的方案，即存储为富文本；小程序端能用 rich-text 组件展示，后台管理端也没有问题，数据库使用 text 存储。后台管理端使用 tinymce 进行富文本编辑，而小程序，我只找到了 editor 组件。</p><p>说问题：</p>',6),d=n("li",null,"editor 组件无法上滑，只能使用输入框的光标移动",-1),u=n("li",null,"editor 组件在输入到底部时，输入回车，光标会移动到底部不可见，必须输入内容时才会显示",-1),k={href:"https://developers.weixin.qq.com/community/develop/article/doc/000e2667890ee0284598518f65bc13",title:"富文本编辑器封装",target:"_blank",rel:"noopener noreferrer"},h=n("li",null,"editor 组件虽然输入功能完善，可以上传图片，修改大小等，功能很全。但是实机体验很差，需要用户的学习成本；组件的 focus 会和自定义按键冲突，键盘会不断唤起。",-1),b=e(`<p>在这些问题的影响下，最终砍掉了 editor 组件的大部分功能，只保留了最基础的文字编辑功能，更多对样式的编辑留在了 web 后台。这里我有几个改进的想法，具体再看项目后期的需求。</p><ul><li>使用 textarea + 图片上传 替换掉 editor 组件，最终合成富文本提交后台。用户可以选择添加段落或图片，操作成本会降低，缺点是无法自定义样式，但同样统一的样式有助于小程序端展示风格的统一。我觉得在没有能力做到和公众号编辑相同的技术力之前，这是最经济的做法。</li><li>在编辑时跳转一个只有 editor 组件的页面，去掉其他所有组件，专注于解决键盘的问题。这个方案需要研究，有一定的风险。</li><li>可以自己写一个虚拟键盘，将自定义按键做在这个键盘里。这个或许是终极解决方案。（<s>微信官方可以照这个改</s>）</li><li>坐等官方改 bug（<s>无限延期</s>）</li></ul><h3 id="ios-与安卓实际展现不一样" tabindex="-1"><a class="header-anchor" href="#ios-与安卓实际展现不一样" aria-hidden="true">#</a> ios 与安卓实际展现不一样</h3><p>这个问题由来已久，实际上，微信小程序的创举之一就是双端可以同时运行，在不同机型上有相同的体验（<s>虽然有些特别的机型有特别的 bug，说的就是 iponeX</s>）。但有一说一，是坑就等认，是 bug 就得填。</p><p><strong>ios 在 js 中对 new Date()方法格式要求与安卓不同</strong><br> 这个问题是之前的小程序中发现的，这次统一提一下。<br> 一般来说，后台存储的日期格式为<code>yyyy-MM-dd</code>,js 中的<code>new Date()</code>方法可以正确解析这个日期，但是 ios 与众不同,它的 js 只支持解析日期格式<code>yyyy/MM/dd</code>,由于普通安卓手机也支持解析这个格式，所以需要对后台传来的日期字符串做统一处理：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> dateString <span class="token operator">=</span> <span class="token string">&quot;2020-12-14 00:00:00&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>dateString<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>感觉麻烦的同学可以要求（<s>威胁</s>）后台做统一的数据处理。。。<br> 一般后台（这里指 Java），可以通过 fastjson 的注解（一个一个加）；或者通过配置统一拦截器对 date 数据格式进行处理（这些配置一般可以使用在 long 转 string 上，因为 js 的 number 类型对 java 的 long 类型有精度缺失）。</p><p><strong>ios 的 input 焦点丢失有问题（疑似 bug）</strong><br> 在一般表单设计中，通常涉及 input 和 picker。在 ios 实机体验中，先点击 input 输入框，再点击 picker（原生 picker 或 vant 组件 picker 都一样），键盘无法自动收起。<br> 这里的解决方法是调用一个微信的 api<code>wx.hideKeyboard()</code>，缺点是开发者工具无法正常显示。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token function">popup</span><span class="token punctuation">(</span><span class="token parameter">showPicker</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// console.log(this[showPicker])</span>
      <span class="token comment">// this[showPicker] = true</span>
      <span class="token comment">// 解决ios键盘不收起的问题,开发者工具时可以注掉</span>
      wx<span class="token punctuation">.</span><span class="token function">hideKeyboard</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token function-variable function">complete</span><span class="token operator">:</span> <span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">[</span>showPicker<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),_=n("strong",null,[s("ios 中包含 editor 组件的页面中"),n("code",null,"position: fixed;"),s("表现与安卓不同")],-1),m=n("br",null,null,-1),v={href:"https://developers.weixin.qq.com/community/develop/doc/0000e243b5ce78da475b5d6be5b400?highLine=position%253A%2520fixed",title:"bug反馈",target:"_blank",rel:"noopener noreferrer"},g=n("br",null,null,-1),f=e('<blockquote><p>iOS 的只能获取键盘高度之后手动设置 bottom 距离</p></blockquote><p>可以一试。</p><h2 id="思考反思" tabindex="-1"><a class="header-anchor" href="#思考反思" aria-hidden="true">#</a> 思考反思</h2><p>这次这个项目的规模不算大，共有 25 个页面，其中只有两个页面相似重复（一个 tabbar 页面，一个普通页面，tabbar 页面不好传参）。许多稿件列表页面重用，效果很好。由于项目较赶，没有开发业务组件，一些相似的元素（如列表中的稿件 item）没有重用，修改 ui 需要同步修改，所幸页面不多，能够顾及。<br> 回顾整个开发过程，有几点仍需改进：</p><ul><li>需要设计几个常用页面模板（list，detail，info），整理几个常用方法（分页，输入，跳转页面），这样能大大加快开发速率。</li><li>使用 ui 组件或许需要自己 fork 一个版本，需要对其进行定制化开发</li><li>前后端交互需要文档，不然后期维护非常麻烦</li><li>可以根据命名区分模块，方便以后遇到相似业务可以直接迁移模块</li><li>学习样式类的模块化开发，方便统一修改</li><li>通过 ScreenToGif 软件记录动态效果，方便（<s>水一篇博客</s>）思考反思，学习成长</li></ul>',5);function x(w,y){const a=i("ExternalLinkIcon");return p(),c("div",null,[r,n("ul",null,[d,u,n("li",null,[s("editor 组件提供了很多 api，但是很多内容需要自己实现，可以参考这位老哥（"),n("a",k,[s("富文本编辑器封装"),t(a)]),s("）")]),h]),b,n("p",null,[_,m,s(" 具体信息可以看这个 "),n("a",v,[s("bug 反馈"),t(a)]),g,s(" 暂时只是体验不好，没有修改。二楼老哥的做法")]),f])}const q=o(l,[["render",x],["__file","小程序开发过程中的一些问题及解决方案.html.vue"]]);export{q as default};
